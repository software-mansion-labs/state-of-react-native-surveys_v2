{
  "dataAPI": {
    "survey": {
      "state_management_mobx": {
        "id": "state_management_mobx",
        "entity": {
          "name": "MobX",
          "homepage": {
            "url": "https://mobx.js.org/"
          },
          "github": {
            "url": "https://github.com/mobxjs/mobx"
          },
          "npm": {
            "url": "https://www.npmjs.com/package/mobx"
          }
        },
        "experience": {
          "comments": [
            "Seems like there is too much overhead and learning curve, also I inherited project and it seems over engineered \n\nimport { types, flow, Instance, SnapshotIn, SnapshotOut } from 'mobx-state-tree';\n\nimport { DateTime } from '~/mobx/util-models/DateTime';\nimport { getRoot } from '~/mobx/utils/getRoot';\n\nexport interface UserInstance extends Instance<typeof User> {}\nexport interface UserSnapshotIn extends SnapshotIn<typeof User> {}\nexport interface UserSnapshotOut extends SnapshotOut<typeof User> {}\n\nexport const User = types\n  .model('User', {\n    id: types.identifier,\n    name: types.string,\n    firstName: types.string,\n    lastName: types.string,\n    email: types.string,\n    hasMyPup: types.boolean,\n    accessRole: types.maybeNull(types.string),\n    phone: types.maybeNull(types.string),\n    created_at: DateTime,\n    updated_at: DateTime,\n  })\n  .actions(self => {\n    return {\n      refresh: flow(function* (): any {\n        const root = getRoot(self);\n        return yield root.userStore.readUser(self.id);\n      }),\n    };\n  });\n\nI mean why can't we just use generated Typescript from Backend"
          ],
          "keys": [
            "would_use",
            "would_not_use",
            "interested",
            "not_interested",
            "never_heard"
          ],
          "all_years": [
            {
              "year": 2023,
              "completion": {
                "total": 3024,
                "count": 1984,
                "percentage_survey": 65.7
              },
              "facets": [
                {
                  "buckets": [
                    {
                      "id": "would_use",
                      "count": 232,
                      "percentage_survey": 7.7,
                      "percentage_question": 11.7
                    },
                    {
                      "id": "would_not_use",
                      "count": 160,
                      "percentage_survey": 5.3,
                      "percentage_question": 8.1
                    },
                    {
                      "id": "interested",
                      "count": 489,
                      "percentage_survey": 16.2,
                      "percentage_question": 24.7
                    },
                    {
                      "id": "not_interested",
                      "count": 766,
                      "percentage_survey": 25.4,
                      "percentage_question": 38.7
                    },
                    {
                      "id": "never_heard",
                      "count": 337,
                      "percentage_survey": 11.2,
                      "percentage_question": 17
                    }
                  ]
                }
              ]
            }
          ]
        }
      }
    }
  }
}